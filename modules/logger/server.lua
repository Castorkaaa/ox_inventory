if not lib then return end

local Logger = {}
local Utils = require 'modules.utils.server'

-- Webhook URLs konfigur√°l√°sa
local webhooks = {
    give = GetConvar('inventory:webhook:give', ''),
    crafting = GetConvar('inventory:webhook:crafting', ''),
    evidence = GetConvar('inventory:webhook:evidence', ''),
    shop = GetConvar('inventory:webhook:shop', ''),
    vehicle = GetConvar('inventory:webhook:vehicle', ''),
    default_stash = GetConvar('inventory:webhook:stash', ''),
}

-- Stash-specifikus webhookok bet√∂lt√©se
local stashWebhooks = {}
local stashes = lib.load('data.stashes') or {}

for i, stash in ipairs(stashes) do
    if stash.webhook then
        stashWebhooks[stash.name] = stash.webhook
    end
end

-- Discord embed sz√≠nek
local colors = {
    give = 3447003,      -- K√©k
    crafting = 15844367, -- Arany
    evidence = 15158332, -- Piros
    shop = 3066993,      -- Z√∂ld
    vehicle = 10181046,  -- Lila
    stash = 15105570,    -- Narancs
    remove = 15158332,   -- Piros
    add = 3066993,       -- Z√∂ld
}

-- J√°t√©kos inform√°ci√≥k lek√©r√©se
local function getPlayerInfo(source)
    local player = server.GetPlayerFromId and server.GetPlayerFromId(source)
    if not player then return 'Ismeretlen j√°t√©kos', 'N/A' end
    
    local name = player.name or player.getName and player.getName() or GetPlayerName(source)
    local identifier = player.identifier or player.getIdentifier and player.getIdentifier() or 'N/A'
    
    return name, identifier
end

-- Item inform√°ci√≥k form√°z√°sa
local function formatItemInfo(item, count)
    local itemData = require('modules.items.server')(item.name or item)
    local itemName = itemData and itemData.label or (item.name or item)
    local metadata = item.metadata and next(item.metadata) and json.encode(item.metadata, {indent = false}) or 'Nincs'
    
    return {
        name = itemName,
        count = count or item.count or 1,
        metadata = metadata,
        weight = item.weight or (itemData and itemData.weight or 0)
    }
end

-- Discord webhook k√ºld√©se
local function sendWebhook(webhookUrl, embed)
    if not webhookUrl or webhookUrl == '' then return end
    
    local data = {
        username = 'OX Inventory Logger',
        embeds = { embed }
    }
    
    PerformHttpRequest(webhookUrl, function(statusCode, response, headers)
        if statusCode ~= 200 and statusCode ~= 204 then
            print('^1[OX_INVENTORY_LOGGER] Webhook hiba: ' .. statusCode .. '^0')
        end
    end, 'POST', json.encode(data), {
        ['Content-Type'] = 'application/json'
    })
end

-- √Åtad√°s log
function Logger.logGive(source, target, item, count)
    if not webhooks.give or webhooks.give == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local targetName, targetId = getPlayerInfo(target)
    local itemInfo = formatItemInfo(item, count)
    
    local embed = {
        title = 'üì§ Item √Åtad√°s',
        color = colors.give,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ √Åtad√≥',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üë• √Åtvev≈ë',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', targetName, target, targetId),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhooks.give, embed)
end

-- Kraftol√°s log
function Logger.logCrafting(source, benchId, recipe, item, count)
    if not webhooks.crafting or webhooks.crafting == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    
    local ingredientsText = ''
    if recipe.ingredients then
        for ingredient, amount in pairs(recipe.ingredients) do
            local ingredientData = require('modules.items.server')(ingredient)
            local ingredientName = ingredientData and ingredientData.label or ingredient
            ingredientsText = ingredientsText .. string.format('‚Ä¢ %s: %s\n', ingredientName, amount)
        end
    end
    
    local embed = {
        title = 'üî® Kraftol√°s',
        color = colors.crafting,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üè≠ Munkasz√©k',
                value = string.format('**%s**', benchId),
                inline = true
            },
            {
                name = 'üì¶ Elk√©sz√≠tett Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg', 
                    itemInfo.name, itemInfo.count, itemInfo.weight),
                inline = false
            },
            {
                name = 'üß™ Felhaszn√°lt Alapanyagok',
                value = ingredientsText ~= '' and ingredientsText or 'Nincs adat',
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhooks.crafting, embed)
end

-- Bizony√≠t√©krakt√°r log
function Logger.logEvidence(source, action, item, count, evidenceId)
    if not webhooks.evidence or webhooks.evidence == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local actionText = action == 'add' and 'Hozz√°ad√°s' or 'Elt√°vol√≠t√°s'
    local actionEmoji = action == 'add' and 'üì•' or 'üì§'
    
    local embed = {
        title = actionEmoji .. ' Bizony√≠t√©krakt√°r - ' .. actionText,
        color = action == 'add' and colors.add or colors.remove,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üëÆ Rend≈ër',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üóÉÔ∏è Bizony√≠t√©krakt√°r',
                value = string.format('**#%s**', evidenceId or 'N/A'),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhooks.evidence, embed)
end

-- Bolt log
function Logger.logShop(source, shopType, item, count, price, currency)
    if not webhooks.shop or webhooks.shop == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local currencySymbol = currency == 'money' and '$' or currency
    
    local embed = {
        title = 'üõí Bolt V√°s√°rl√°s',
        color = colors.shop,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ V√°s√°rl√≥',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üè™ Bolt',
                value = string.format('**%s**', shopType),
                inline = true
            },
            {
                name = 'üì¶ V√°s√°rolt Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg', 
                    itemInfo.name, itemInfo.count, itemInfo.weight),
                inline = false
            },
            {
                name = 'üí∞ √År',
                value = string.format('**%s%s**', price, currencySymbol),
                inline = true
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhooks.shop, embed)
end

-- J√°rm≈± log (csomagtart√≥/keszty≈±tart√≥)
function Logger.logVehicle(source, action, vehicleType, plate, item, count)
    if not webhooks.vehicle or webhooks.vehicle == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local actionText = action == 'add' and 'Betett' or 'Kivett'
    local actionEmoji = action == 'add' and 'üì•' or 'üì§'
    local vehicleTypeText = vehicleType == 'trunk' and 'Csomagtart√≥' or 'Keszty≈±tart√≥'
    
    local embed = {
        title = actionEmoji .. ' ' .. vehicleTypeText .. ' - ' .. actionText,
        color = action == 'add' and colors.add or colors.remove,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üöó J√°rm≈±',
                value = string.format('**%s**\nRendsz√°m: %s', vehicleTypeText, plate or 'N/A'),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhooks.vehicle, embed)
end

-- Stash log
function Logger.logStash(source, action, stashName, stashLabel, item, count)
    local webhookUrl = stashWebhooks[stashName] or webhooks.default_stash
    if not webhookUrl or webhookUrl == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local actionText = action == 'add' and 'Betett' or 'Kivett'
    local actionEmoji = action == 'add' and 'üì•' or 'üì§'
    
    local embed = {
        title = actionEmoji .. ' T√°rol√≥ - ' .. actionText,
        color = action == 'add' and colors.add or colors.remove,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üì¶ T√°rol√≥',
                value = string.format('**%s**\nN√©v: %s', stashLabel or stashName, stashName),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhookUrl, embed)
end

-- Item haszn√°lat log
function Logger.logItemUse(source, item, slot)
    -- Ez opcion√°lis, ha szeretn√©d logolni az item haszn√°latokat is
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, 1)
    
    -- Csak akkor logoljuk, ha van webhook be√°ll√≠tva
    local useWebhook = GetConvar('inventory:webhook:use', '')
    if not useWebhook or useWebhook == '' then return end
    
    local embed = {
        title = 'üéØ Item Haszn√°lat',
        color = 5793266, -- Sz√ºrke
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üì¶ Haszn√°lt Item',
                value = string.format('**%s**\nSlot: %s\nMetadata: %s', 
                    itemInfo.name, slot, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(useWebhook, embed)
end

-- Inventory mozg√°s log (√°ltal√°nos)
function Logger.logInventoryMove(source, fromInventory, toInventory, item, count, action)
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    
    -- Meghat√°rozzuk a webhook URL-t a c√©lhely alapj√°n
    local webhookUrl = webhooks.default_stash
    local logTitle = 'üì¶ Item Mozgat√°s'
    local logColor = colors.stash
    
    if toInventory.type == 'trunk' or toInventory.type == 'glovebox' then
        webhookUrl = webhooks.vehicle
        logTitle = 'üöó J√°rm≈± T√°rol√≥'
        logColor = colors.vehicle
    elseif toInventory.type == 'policeevidence' then
        webhookUrl = webhooks.evidence
        logTitle = 'üöî Bizony√≠t√©krakt√°r'
        logColor = colors.evidence
    elseif toInventory.type == 'stash' then
        webhookUrl = stashWebhooks[toInventory.id] or webhooks.default_stash
        logTitle = 'üì¶ T√°rol√≥'
        logColor = colors.stash
    end
    
    if not webhookUrl or webhookUrl == '' then return end
    
    local embed = {
        title = logTitle,
        color = logColor,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üìç Mozgat√°s',
                value = string.format('**%s** ‚Üí **%s**', fromInventory.label or fromInventory.type, toInventory.label or toInventory.type),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        ],
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhookUrl, embed)
end

-- Webhook URL friss√≠t√©se stash-ekhez
function Logger.updateStashWebhooks()
    local newStashes = lib.load('data.stashes') or {}
    stashWebhooks = {}
    
    for i, stash in ipairs(newStashes) do
        if stash.webhook then
            stashWebhooks[stash.name] = stash.webhook
        end
    end
end

-- Exportok
exports('logGive', Logger.logGive)
exports('logCrafting', Logger.logCrafting)
exports('logEvidence', Logger.logEvidence)
exports('logShop', Logger.logShop)
exports('logVehicle', Logger.logVehicle)
exports('logStash', Logger.logStash)
exports('logItemUse', Logger.logItemUse)
exports('logInventoryMove', Logger.logInventoryMove)
exports('updateStashWebhooks', Logger.updateStashWebhooks)

return Logger