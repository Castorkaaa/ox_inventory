if not lib then return end

local Logger = {}

-- J√°t√©kos inform√°ci√≥k lek√©r√©se
local function getPlayerInfo(source)
    local player = exports.ox_inventory:GetPlayerFromId and exports.ox_inventory:GetPlayerFromId(source)
    
    if not player then
        -- Fallback m√°s framework√∂kre
        if GetResourceState('es_extended') == 'started' then
            player = exports.es_extended:getSharedObject().GetPlayerFromId(source)
        elseif GetResourceState('qbx_core') == 'started' then
            player = exports.qbx_core:GetPlayer(source)
        elseif GetResourceState('ox_core') == 'started' then
            player = exports.ox_core:GetPlayer(source)
        end
    end
    
    if not player then 
        return GetPlayerName(source) or 'Ismeretlen j√°t√©kos', 'N/A' 
    end
    
    local name = player.name or player.getName and player.getName() or GetPlayerName(source)
    local identifier = player.identifier or player.citizenid or player.charid or 'N/A'
    
    return name, tostring(identifier)
end

-- Item inform√°ci√≥k form√°z√°sa
local function formatItemInfo(item, count)
    local itemName = 'Ismeretlen Item'
    local metadata = 'Nincs'
    local weight = 0
    
    if type(item) == 'table' then
        itemName = item.label or item.name or 'Ismeretlen Item'
        count = count or item.count or 1
        weight = item.weight or 0
        
        if item.metadata and next(item.metadata) then
            metadata = json.encode(item.metadata, {indent = false})
        end
    else
        itemName = tostring(item)
        count = count or 1
    end
    
    return {
        name = itemName,
        count = count,
        metadata = metadata,
        weight = weight
    }
end

-- Discord webhook k√ºld√©se
local function sendWebhook(webhookUrl, embed)
    if not webhookUrl or webhookUrl == '' then 
        if Config.Settings.debug then
            print('^3[OX_INVENTORY_LOGGER] Webhook URL nincs be√°ll√≠tva^0')
        end
        return 
    end
    
    local data = {
        username = 'OX Inventory Logger',
        embeds = { embed }
    }
    
    PerformHttpRequest(webhookUrl, function(statusCode, response, headers)
        if statusCode ~= 200 and statusCode ~= 204 then
            print('^1[OX_INVENTORY_LOGGER] Webhook hiba: ' .. statusCode .. '^0')
            if Config.Settings.debug then
                print('^1Response: ' .. tostring(response) .. '^0')
            end
        elseif Config.Settings.debug then
            print('^2[OX_INVENTORY_LOGGER] Webhook sikeresen elk√ºldve: ' .. statusCode .. '^0')
        end
    end, 'POST', json.encode(data), {
        ['Content-Type'] = 'application/json'
    })
end

-- √Åtad√°s log
function Logger.logGive(source, target, item, count)
    if not Config.Webhooks.give or Config.Webhooks.give == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local targetName, targetId = getPlayerInfo(target)
    local itemInfo = formatItemInfo(item, count)
    
    local embed = {
        title = 'üì§ Item √Åtad√°s',
        color = Config.Colors.give,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ √Åtad√≥',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üë• √Åtvev≈ë',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', targetName, target, targetId),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(Config.Webhooks.give, embed)
end

-- Kraftol√°s log
function Logger.logCrafting(source, benchId, recipe, item, count)
    if not Config.Webhooks.crafting or Config.Webhooks.crafting == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    
    local ingredientsText = ''
    if recipe and recipe.ingredients then
        for ingredient, amount in pairs(recipe.ingredients) do
            ingredientsText = ingredientsText .. string.format('‚Ä¢ %s: %s\n', ingredient, amount)
        end
    end
    
    local embed = {
        title = 'üî® Kraftol√°s',
        color = Config.Colors.crafting,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üè≠ Munkasz√©k',
                value = string.format('**%s**', tostring(benchId)),
                inline = true
            },
            {
                name = 'üì¶ Elk√©sz√≠tett Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg', 
                    itemInfo.name, itemInfo.count, itemInfo.weight),
                inline = false
            },
            {
                name = 'üß™ Felhaszn√°lt Alapanyagok',
                value = ingredientsText ~= '' and ingredientsText or 'Nincs adat',
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(Config.Webhooks.crafting, embed)
end

-- Bizony√≠t√©krakt√°r log
function Logger.logEvidence(source, action, item, count, evidenceId)
    if not Config.Webhooks.evidence or Config.Webhooks.evidence == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local actionText = action == 'add' and 'Hozz√°ad√°s' or 'Elt√°vol√≠t√°s'
    local actionEmoji = action == 'add' and 'üì•' or 'üì§'
    
    local embed = {
        title = actionEmoji .. ' Bizony√≠t√©krakt√°r - ' .. actionText,
        color = action == 'add' and Config.Colors.add or Config.Colors.remove,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üëÆ Rend≈ër',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üóÉÔ∏è Bizony√≠t√©krakt√°r',
                value = string.format('**#%s**', evidenceId or 'N/A'),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(Config.Webhooks.evidence, embed)
end

-- Bolt log
function Logger.logShop(source, shopType, item, count, price, currency)
    if not Config.Webhooks.shop or Config.Webhooks.shop == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local currencySymbol = currency == 'money' and '$' or currency
    
    local embed = {
        title = 'üõí Bolt V√°s√°rl√°s',
        color = Config.Colors.shop,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ V√°s√°rl√≥',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üè™ Bolt',
                value = string.format('**%s**', tostring(shopType)),
                inline = true
            },
            {
                name = 'üì¶ V√°s√°rolt Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg', 
                    itemInfo.name, itemInfo.count, itemInfo.weight),
                inline = false
            },
            {
                name = 'üí∞ √År',
                value = string.format('**%s%s**', price or 0, currencySymbol),
                inline = true
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(Config.Webhooks.shop, embed)
end

-- J√°rm≈± log (csomagtart√≥/keszty≈±tart√≥)
function Logger.logVehicle(source, action, vehicleType, plate, item, count)
    if not Config.Webhooks.vehicle or Config.Webhooks.vehicle == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local actionText = action == 'add' and 'Betett' or 'Kivett'
    local actionEmoji = action == 'add' and 'üì•' or 'üì§'
    local vehicleTypeText = vehicleType == 'trunk' and 'Csomagtart√≥' or 'Keszty≈±tart√≥'
    
    local embed = {
        title = actionEmoji .. ' ' .. vehicleTypeText .. ' - ' .. actionText,
        color = action == 'add' and Config.Colors.add or Config.Colors.remove,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üöó J√°rm≈±',
                value = string.format('**%s**\nRendsz√°m: %s', vehicleTypeText, plate or 'N/A'),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(Config.Webhooks.vehicle, embed)
end

-- Stash log
function Logger.logStash(source, action, stashName, stashLabel, item, count)
    local webhookUrl = Config.StashWebhooks[stashName] or Config.Webhooks.default_stash
    if not webhookUrl or webhookUrl == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    local actionText = action == 'add' and 'Betett' or 'Kivett'
    local actionEmoji = action == 'add' and 'üì•' or 'üì§'
    
    local embed = {
        title = actionEmoji .. ' T√°rol√≥ - ' .. actionText,
        color = action == 'add' and Config.Colors.add or Config.Colors.remove,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üì¶ T√°rol√≥',
                value = string.format('**%s**\nN√©v: %s', stashLabel or stashName, stashName),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhookUrl, embed)
end

-- Item haszn√°lat log
function Logger.logItemUse(source, item, slot)
    if not Config.Settings.logItemUse or not Config.Webhooks.use or Config.Webhooks.use == '' then return end
    
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, 1)
    
    local embed = {
        title = 'üéØ Item Haszn√°lat',
        color = Config.Colors.use,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üì¶ Haszn√°lt Item',
                value = string.format('**%s**\nSlot: %s\nMetadata: %s', 
                    itemInfo.name, slot or 'N/A', itemInfo.metadata),
                inline = false
            }
        },
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(Config.Webhooks.use, embed)
end

-- √Åltal√°nos inventory mozg√°s log
function Logger.logInventoryMove(source, fromInventory, toInventory, item, count, action)
    local playerName, playerId = getPlayerInfo(source)
    local itemInfo = formatItemInfo(item, count)
    
    -- Meghat√°rozzuk a webhook URL-t √©s log t√≠pust
    local webhookUrl = Config.Webhooks.default_stash
    local logTitle = 'üì¶ Item Mozgat√°s'
    local logColor = Config.Colors.stash
    
    if toInventory.type == 'trunk' or toInventory.type == 'glovebox' or 
       fromInventory.type == 'trunk' or fromInventory.type == 'glovebox' then
        webhookUrl = Config.Webhooks.vehicle
        logTitle = 'üöó J√°rm≈± T√°rol√≥'
        logColor = Config.Colors.vehicle
    elseif toInventory.type == 'policeevidence' or fromInventory.type == 'policeevidence' then
        webhookUrl = Config.Webhooks.evidence
        logTitle = 'üöî Bizony√≠t√©krakt√°r'
        logColor = Config.Colors.evidence
    elseif toInventory.type == 'stash' or fromInventory.type == 'stash' then
        local stashName = toInventory.type == 'stash' and toInventory.id or fromInventory.id
        webhookUrl = Config.StashWebhooks[stashName] or Config.Webhooks.default_stash
        logTitle = 'üì¶ T√°rol√≥'
        logColor = Config.Colors.stash
    end
    
    if not webhookUrl or webhookUrl == '' then return end
    
    local embed = {
        title = logTitle,
        color = logColor,
        timestamp = os.date('!%Y-%m-%dT%H:%M:%SZ'),
        fields = {
            {
                name = 'üë§ J√°t√©kos',
                value = string.format('**%s**\nID: %s\nIdentifier: %s', playerName, source, playerId),
                inline = true
            },
            {
                name = 'üìç Mozgat√°s',
                value = string.format('**%s** ‚Üí **%s**', 
                    fromInventory.label or fromInventory.type or 'Ismeretlen', 
                    toInventory.label or toInventory.type or 'Ismeretlen'),
                inline = true
            },
            {
                name = 'üì¶ Item',
                value = string.format('**%s**\nMennyis√©g: %s\nS√∫ly: %sg\nMetadata: %s', 
                    itemInfo.name, itemInfo.count, itemInfo.weight, itemInfo.metadata),
                inline = false
            }
        ],
        footer = {
            text = 'OX Inventory Logger',
            icon_url = 'https://i.imgur.com/4M34hi2.png'
        }
    }
    
    sendWebhook(webhookUrl, embed)
end

-- Stash webhookok bet√∂lt√©se
function Logger.loadStashWebhooks()
    Config.StashWebhooks = {}
    
    -- Pr√≥b√°ljuk bet√∂lteni a stash konfigur√°ci√≥t
    local success, stashes = pcall(function()
        return exports.ox_inventory and exports.ox_inventory:GetStashes() or {}
    end)
    
    if not success then
        if Config.Settings.debug then
            print('^3[OX_INVENTORY_LOGGER] Nem siker√ºlt bet√∂lteni a stash konfigur√°ci√≥t^0')
        end
        return
    end
    
    for _, stash in pairs(stashes or {}) do
        if stash.webhook and stash.name then
            Config.StashWebhooks[stash.name] = stash.webhook
            if Config.Settings.debug then
                print(string.format('^2[OX_INVENTORY_LOGGER] Stash webhook bet√∂ltve: %s^0', stash.name))
            end
        end
    end
end

-- Inicializ√°l√°s
CreateThread(function()
    Wait(2000) -- V√°runk, hogy az ox_inventory bet√∂lt≈ëdj√∂n
    Logger.loadStashWebhooks()
    print('^2[OX_INVENTORY_LOGGER] Logger modul bet√∂ltve!^0')
end)

-- Exportok
exports('logGive', Logger.logGive)
exports('logCrafting', Logger.logCrafting)
exports('logEvidence', Logger.logEvidence)
exports('logShop', Logger.logShop)
exports('logVehicle', Logger.logVehicle)
exports('logStash', Logger.logStash)
exports('logItemUse', Logger.logItemUse)
exports('logInventoryMove', Logger.logInventoryMove)
exports('loadStashWebhooks', Logger.loadStashWebhooks)

return Logger